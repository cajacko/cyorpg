{"version":3,"sources":["config/emojis.ts","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["emojis","useStyles","makeStyles","theme","createStyles","fab","margin","spacing","position","bottom","right","button","delete","left","emotion","fontFamily","fontSize","paper","width","backgroundColor","palette","background","boxShadow","shadows","padding","outline","top","transform","container","display","alignItems","justifyContent","App","_React$useState","React","useState","_React$useState2","Object","slicedToArray","setEmotion","_React$useState3","_React$useState4","emotions","setEmotions","_React$useState5","_React$useState6","showInput","setShowInput","_React$useState7","_React$useState8","inputValue","setInputValue","_React$useState9","_React$useState10","value","setValue","classes","setRandEmotion","emotionsArg","valueArg","arr","rand","Math","floor","random","length","useEffect","fetch","headers","secret-key","then","res","json","contents","react_default","a","createElement","Fragment","CssBaseline","AppBar","Tabs","onChange","_","newValue","undefined","Tab","label","className","style","Fab","color","aria-label","onClick","emotionsToSet","filter","emo","method","Content-Type","body","JSON","stringify","Delete_default","Button","variant","Add_default","Dialog","open","onClose","aria-labelledby","DialogTitle","id","DialogContent","TextField","autoFocus","fullWidth","event","target","DialogActions","concat","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","components_App","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e6726e7e.chunk.js","sourcesContent":["const emojis = [\n  '😀',\n  '😃',\n  '😄',\n  '😁',\n  '😆',\n  '😅',\n  '🤣',\n  '😂',\n  '🙂',\n  '🙃',\n  '😉',\n  '😊',\n  '😇',\n  '😍',\n  '🤩',\n  '😘',\n  '😗',\n  '😚',\n  '😙',\n  '😋',\n  '😛',\n  '😜',\n  '🤪',\n  '😝',\n  '🤑',\n  '🤗',\n  '🤭',\n  '🤫',\n  '🤔',\n  '🤐',\n  '🤨',\n  '😐',\n  '😑',\n  '😶',\n  '😏',\n  '😒',\n  '🙄',\n  '😬',\n  '🤥',\n  '😌',\n  '😔',\n  '😪',\n  '🤤',\n  '😴',\n  '😷',\n  '🤒',\n  '🤕',\n  '🤢',\n  '🤮',\n  '🤧',\n  '😵',\n  '🤯',\n  '🤠',\n  '😎',\n  '🤓',\n  '🧐',\n  '😕',\n  '😟',\n  '🙁',\n  '😮',\n  '😯',\n  '😲',\n  '😳',\n  '😦',\n  '😧',\n  '😨',\n  '😰',\n  '😥',\n  '😢',\n  '😭',\n  '😱',\n  '😖',\n  '😣',\n  '😞',\n  '😓',\n  '😩',\n  '😫',\n  '😤',\n  '😡',\n  '😠',\n  '🤬',\n];\n\nexport default emojis;\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport emojis from '../config/emojis';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  fab: {\n    margin: theme.spacing(2),\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n  },\n  button: {\n    margin: theme.spacing(4),\n    position: 'absolute',\n    bottom: 0,\n  },\n  delete: {\n    margin: theme.spacing(2),\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n  },\n  emotion: {\n    fontFamily: 'helvetica, sans-serif',\n    fontSize: 50,\n  },\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(4),\n    outline: 'none',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n  },\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n}));\n\n/**\n * App component\n */\nconst App: React.FC = () => {\n  const [emotion, setEmotion] = React.useState('Loading');\n  const [emotions, setEmotions] = React.useState<string[]>([]);\n  const [showInput, setShowInput] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState('');\n  const [value, setValue] = React.useState(0);\n  const classes = useStyles();\n\n  /**\n   * Set a random emotion\n   */\n  const setRandEmotion = (emotionsArg?: string[], valueArg?: number) => {\n    let arr = emotionsArg || emotions;\n\n    if (valueArg === 1 || value === 1) {\n      arr = emojis;\n    }\n\n    let rand = arr[Math.floor(Math.random() * arr.length)];\n\n    if (arr.length > 1) {\n      while (rand === emotion) {\n        rand = arr[Math.floor(Math.random() * arr.length)];\n      }\n    }\n\n    setEmotion(rand || 'No emotion to set');\n  };\n\n  /**\n   * Delete emotion\n   */\n  const deleteEmotion = () => {\n    const emotionsToSet = emotions.filter(emo => emo !== emotion);\n\n    setEmotions(emotionsToSet);\n    setRandEmotion(emotionsToSet);\n\n    fetch('https://api.jsonbin.io/b/5d029c6e4f234842a564ef57', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'secret-key': '$2a$10$89POHX9tTf1imV1Z8UiQ6Ov0WSLocHomZ3OaRecBZ4gfiospExTZ.',\n      },\n      body: JSON.stringify({\n        emotions: emotionsToSet,\n      }),\n    });\n  };\n\n  /**\n   * Set remote emotions\n   */\n  const setRemoteEmotions = () => {\n    setShowInput(false);\n    const emotionsToSet = emotions.concat([inputValue]);\n\n    setEmotions(emotionsToSet);\n\n    fetch('https://api.jsonbin.io/b/5d029c6e4f234842a564ef57', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'secret-key': '$2a$10$89POHX9tTf1imV1Z8UiQ6Ov0WSLocHomZ3OaRecBZ4gfiospExTZ.',\n      },\n      body: JSON.stringify({\n        emotions: emotionsToSet,\n      }),\n    });\n  };\n\n  React.useEffect(() => {\n    fetch('https://api.jsonbin.io/b/5d029c6e4f234842a564ef57/latest', {\n      headers: {\n        'secret-key': '$2a$10$89POHX9tTf1imV1Z8UiQ6Ov0WSLocHomZ3OaRecBZ4gfiospExTZ.',\n      },\n    })\n      .then(res => res.json())\n      .then((contents) => {\n        setEmotions(contents.emotions);\n        setRandEmotion(contents.emotions);\n      });\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"static\">\n        <Tabs\n          value={value}\n          onChange={(_, newValue) => {\n            setValue(newValue);\n            setRandEmotion(undefined, newValue);\n          }}\n        >\n          <Tab label=\"Emotions\" />\n          <Tab label=\"Emojis\" />\n        </Tabs>\n      </AppBar>\n      <div className={classes.container}>\n        <p\n          style={{\n            fontSize: value === 1 ? 150 : undefined,\n          }}\n          className={classes.emotion}\n        >\n          {emotion}\n        </p>\n        {value === 0 && (\n          <Fab color=\"primary\" aria-label=\"Add\" className={classes.delete} onClick={deleteEmotion}>\n            <DeleteIcon />\n          </Fab>\n        )}\n        <Button className={classes.button} variant=\"contained\" onClick={() => setRandEmotion()}>\n          Reload\n        </Button>\n        {value === 0 && (\n          <Fab\n            color=\"primary\"\n            aria-label=\"Add\"\n            className={classes.fab}\n            onClick={() => setShowInput(true)}\n          >\n            <AddIcon />\n          </Fab>\n        )}\n        <Dialog\n          open={showInput}\n          onClose={() => setShowInput(false)}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Add an Emotion</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Emotion\"\n              fullWidth\n              value={inputValue}\n              onChange={event => setInputValue(event.target.value)}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setShowInput(false)} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={setRemoteEmotions} color=\"primary\">\n              Add\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ninterface IConfig {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\n/**\n * Register a valid service worker\n */\nfunction registerValidSW(swUrl: string, config?: IConfig) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              // eslint-disable-next-line no-console\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // eslint-disable-next-line no-console\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      // eslint-disable-next-line no-console\n      console.error('Error during service worker registration:', error);\n    });\n}\n\n/**\n * Check the service worker is valid\n */\nfunction checkValidServiceWorker(swUrl: string, config?: IConfig) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      // eslint-disable-next-line no-console\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\n/**\n * Register the service worker\n */\nexport function register(config?: IConfig) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // eslint-disable-next-line no-console\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\n/**\n * Unregister the service worker\n */\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}